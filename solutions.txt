
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
//question 1
public class OddEvenInArrayExample {

    public static void main(String args[]) {
        int a[] = { 1, 2, 5, 6, 3, 2 };
        System.out.println( "Even Numbers:" );
        for( int i = 0; i < a.length; i++ ) {
            if( a[ i ] % 2 == 0 ) {
                System.out.println( a[ i ] );
            }
        }
    }
}



//question 2
class GFG {

    // Returns count of maximum consecutive 1's
    // in binary array arr[0..n-1]
    static int getMaxLength(boolean arr[], int n)
    {

        int count = 0; //intitialize count
        int result = 0; //initialize max

        for (int i = 0; i < n; i++)
        {

            // Reset count when 0 is found
            if (arr[i] == false)
                count = 0;

                // If 1 is found, increment count
                // and update result if count becomes
                // more.
            else
            {
                count++;//increase count
                result = Math.max(result, count);
            }
        }

        return result;
    }

    // Driver method
    public static void main(String[] args)
    {
        boolean arr[] = {true, true, false, false,
            true, false, true, false,
            true, true, true, true};

        int n = arr.length;

        System.out.println(getMaxLength(arr, n));
    }
}


//question 3
class GFG1
{
    static int search(int ar[],
        int size)
    {
        int a = 0, b = size - 1;
        int mid = 0;
        while ((b - a) > 1)
        {
            mid = (a + b) / 2;
            if ((ar[a] - a) != (ar[mid] - mid))
                b = mid;
            else if ((ar[b] - b) != (ar[mid] - mid))
                a = mid;
        }
        return (ar[a] + 1);
    }

    // Driver Code
    public static void main (String[] args)
    {
        int ar[] = { 1, 2, 3, 4, 5, 6, 8 };
        int size = ar.length;
        System.out.println("Missing number: " +
            search(ar, size));
    }
}


//question 4

import React from 'react';

class myComponent extends React.Component {
  componentDidMount() {
    const apiUrl = 'www.example.com/api/get/1';
    fetch(apiUrl)
      .then((response) => response.json())
      .then((data) => console.log('This is your data', data));
  }
  render() {
    return <h1>my Component has Mounted, Check the browser 'console' </h1>;
  }
}
export default myComponent;


//question 5
class SortByNum{
    private Integer id;
    private String name;
    SortByNum(int id, String name){
        this.id=id;
        this.name= name;

    }
    public static void main(String[] args) {
        SortByNum num1 = new SortByNum(1,"chetan");

        SortByNum num2 = new SortByNum(2,"mandeep");

        List<SortByNum>  sortByNums = new ArrayList<>(  );
        sortByNums.add( num1 );
        sortByNums.add( num2 );

        Collections.sort( sortByNums, new Comparator<SortByNum>() {
            @Override
            public int compare(SortByNum sortByNum, SortByNum t1) {
                return sortByNum.id.compareTo(t1.id);
            }
        } );
        System.out.println(sortByNums);
    }
}


